// CMD: mikino bmc <file>
// ANCHOR: all
// ANCHOR: vars
vars: (
	len, grouping: int
	i: int
	done: bool
)
// ANCHOR_END: vars

// ANCHOR: init
init: (and
    (≥ len 0)
	(≥ grouping 1)
	(= i 0)
	(= done (not (< i len)))
	(= (mod len grouping) 0)
)
// ANCHOR_END: init

// ANCHOR: trans
// Encodes iteration `(pre i)`, NOT iteration `i`. That is, `trans` encodes the
// iteration where we access `arr` with the interval `(pre i)..((pre i) + grouping)`.
trans: (and
	(= grouping (pre grouping))
	(= len (pre len))
	// NEW value of the `done` flag, if `true` there will be no further iteration.
    (= done (not (< i len)))
	(ite
		// if    | If `done`,
		(pre done)
		// then  | just maintain the value, a.k.a. "stuttering";
		(= i (pre i))
		// else  | otherwise, `i` is incremented by `grouping`.
		(= i (+ (pre i) grouping))
	)
)
// ANCHOR_END: trans

// ANCHOR: candidates
po_s: (
	"¬(len = 8 ∧ grouping = 4 ∧ i = len)":
		(not (and (= len 8) (= grouping 4) (= i len)))
)
// ANCHOR_END: candidates
// ANCHOR_END: all