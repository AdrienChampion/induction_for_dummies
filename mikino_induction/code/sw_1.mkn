// CMD: mikino check <file>
// ANCHOR: all
// ANCHOR: var_decls
/// State variables.
vars: (
	/// Inputs of the system.
	start_stop, reset: bool
	/// Keeps track of whether we are counting.
	is_counting: bool
	/// Counts time, output of the system.
	cnt: int
)
// ANCHOR_END: var_decls

// ANCHOR: init
/// Initial predicate.
init: (and
	(= is_counting start_stop)
	(= cnt 0)
)
// ANCHOR_END: init

// ANCHOR: trans
/// Transition relation.
trans: (and
	(=
		// The *next* value of `is_counting` is equal to...
		is_counting
		(ite start_stop
			// ...if `start_stop` is true, then the negation of
			// its *previous* value...
			//    vvvvvvvvvvvvvvv
			(not (pre is_counting))
			// ...otherwise, it is equal to its previous value.
			(pre is_counting)
		)
	)
	(= cnt
		(ite reset
			0
			(ite is_counting
				(+ (pre cnt) 1)
				(pre cnt)
			)
		)
	)
)
// ANCHOR_END: trans

// ANCHOR: candidates
/// Candidate invariants, or "Proof Objectives" (`po_s`).
po_s: (
	"cnt is positive": (≥ cnt 0)
	"cnt ≤ 2": (≤ cnt 2)
	"cnt ≤ 4": (≤ cnt 4)
)
// ANCHOR_END: candidates
// ANCHOR_END: all